import type { Context } from "konva/lib/Context"

/**
 * 通过字体大小为14，构造已知的数值、大小写英文以及常用的标点符号来固定宽度，减少canvas对字体的宽度测量
 */
const ChartWidthMapping: Record<string, number> = {
	"0": 8.66796875,
	"1": 6.34375,
	"2": 8.298828125,
	"3": 8.626953125,
	"4": 8.859375,
	"5": 8.50390625,
	"6": 8.763671875,
	"7": 7.8203125,
	"8": 8.791015625,
	"9": 8.763671875,
	a: 7.57421875,
	b: 8.44921875,
	c: 7.68359375,
	d: 8.44921875,
	e: 7.84765625,
	f: 4.9150390625,
	g: 8.380859375,
	h: 8.0869140625,
	i: 3.30859375,
	j: 3.3017578125,
	k: 7.451171875,
	l: 3.390625,
	m: 12.03125,
	n: 8.0185546875,
	o: 8.12109375,
	p: 8.39453125,
	q: 8.380859375,
	r: 5.181640625,
	s: 7.177734375,
	t: 4.935546875,
	u: 8.0185546875,
	v: 7.4375,
	w: 10.69140625,
	x: 7.19140625,
	y: 7.451171875,
	z: 7.396484375,
	A: 9.283203125,
	B: 9.05078125,
	C: 9.87109375,
	D: 10.021484375,
	E: 8.189453125,
	F: 7.861328125,
	G: 10.3017578125,
	H: 10.240234375,
	I: 3.595703125,
	J: 7.3828125,
	K: 9.0712890625,
	L: 7.7998046875,
	M: 12.0859375,
	N: 10.240234375,
	O: 10.650390625,
	P: 8.7431640625,
	Q: 10.650390625,
	R: 8.99609375,
	S: 8.7705078125,
	T: 8.72265625,
	U: 10.171875,
	V: 9.283203125,
	W: 13.3984375,
	X: 9.3515625,
	Y: 9.0234375,
	Z: 9.1123046875,
	"[": 5.1953125,
	"]": 5.1953125,
	";": 4.005859375,
	"'": 4.005859375,
	",": 4.005859375,
	".": 4.005859375,
	"/": 4.115234375,
	"`": 6.849609375,
	"~": 8.66796875,
	"!": 4.2041015625,
	"@": 12.701171875,
	"#": 8.66796875,
	$: 8.66796875,
	"%": 12.8037109375,
	"^": 8.66796875,
	"&": 9.8095703125,
	"*": 6.453125,
	"(": 5.1953125,
	")": 5.1953125,
	_: 8.0185546875,
	"+": 8.66796875,
	"{": 5.1953125,
	"}": 5.1953125,
	":": 4.005859375,
	'"': 6.53515625,
	"<": 8.66796875,
	">": 8.66796875,
	"?": 7.02734375,
	"|": 3.47265625,
}

/**
 * @description 获取字体宽度
 * @param {Context} ctx Canvas上下文
 * @param {string} byte 字符
 */
const getByteWidth = (ctx: Context, byte: string): number => {
	if (!ChartWidthMapping[byte]) {
		// 写入缓存，方便相同的字符不用重复计算
		ChartWidthMapping[byte] = ctx.measureText(byte)?.width || 14
	}
	return ChartWidthMapping[byte]
}

export default getByteWidth
